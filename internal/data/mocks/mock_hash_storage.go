// Code generated by MockGen. DO NOT EDIT.
// Source: hash_storage.go

// Package mock_data is a generated GoMock package.
package mock_data

import (
	reflect "reflect"

	data "github.com/ScienceSoft-Inc/integrity-sum/internal/data"
	"github.com/ScienceSoft-Inc/integrity-sum/pkg/k8s"
	gomock "github.com/golang/mock/gomock"
)

// MockIHashStorage is a mock of IHashStorage interface.
type MockIHashStorage struct {
	ctrl     *gomock.Controller
	recorder *MockIHashStorageMockRecorder
}

// MockIHashStorageMockRecorder is the mock recorder for MockIHashStorage.
type MockIHashStorageMockRecorder struct {
	mock *MockIHashStorage
}

// NewMockIHashStorage creates a new mock instance.
func NewMockIHashStorage(ctrl *gomock.Controller) *MockIHashStorage {
	mock := &MockIHashStorage{ctrl: ctrl}
	mock.recorder = &MockIHashStorageMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIHashStorage) EXPECT() *MockIHashStorageMockRecorder {
	return m.recorder
}

// Create mocks base method.
func (m *MockIHashStorage) Create(allHashData []*data.HashData, deploymentData *k8s.DeploymentData) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create", allHashData, deploymentData)
	ret0, _ := ret[0].(error)
	return ret0
}

// Create indicates an expected call of Create.
func (mr *MockIHashStorageMockRecorder) Create(allHashData, deploymentData interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockIHashStorage)(nil).Create), allHashData, deploymentData)
}

// Get mocks base method.
func (m *MockIHashStorage) Get(dirPath string, deploymentData *k8s.DeploymentData) ([]*data.HashData, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get", dirPath, deploymentData)
	ret0, _ := ret[0].([]*data.HashData)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Get indicates an expected call of Get.
func (mr *MockIHashStorageMockRecorder) Get(dirPath, deploymentData interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockIHashStorage)(nil).Get), dirPath, deploymentData)
}
